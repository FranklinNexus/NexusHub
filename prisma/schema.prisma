// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// =================================
// NexusHub Data Models
// =================================

// 用户模型
// 存储用户的基本信息和认证凭证
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  skillUnits Int   @default(1000) // 新用户默认拥有1000技能单元
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  apiKeys   ApiKey[]
  callLogs  ApiCallLog[]
}

// API密钥模型
// 每个用户可以拥有多个API密钥，方便管理不同应用
model ApiKey {
  id          String   @id @default(cuid())
  key         String   @unique // 这是真正的API Key，需要哈希存储
  note        String?  // 用户为这个Key添加的备注
  expiresAt   DateTime?
  lastUsedAt  DateTime?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

// 技能模型
// 存储可用的AI技能及其配置信息
model Skill {
  id          String      @id @default(cuid())
  name        String      @unique // 如: "gpt-3.5-turbo"
  provider    String      // 如: "OpenAI"
  apiUrl      String
  apiKey      String      // 这是NexusHub持有的、访问下游服务的密钥
  costPerUnit Int

  callLogs    ApiCallLog[]
}

// API调用日志模型
// 记录每一次通过NexusHub的API调用
model ApiCallLog {
  id          String   @id @default(cuid())
  timestamp   DateTime @default(now())
  cost        Int      // 本次调用花费的技能单元
  statusCode  Int      // 下游服务的响应状态码
  isSuccess   Boolean

  user        User     @relation(fields: [userId], references: [id])
  userId      String

  skill       Skill    @relation(fields: [skillId], references: [id])
  skillId     String
}
